package poly

import (
	"github.com/ethereum/go-ethereum/common/hexutil"
	//"github.com/palettechain/deploy-tool/config"
	//"github.com/stretchr/testify/assert"
	"testing"
)

func TestPolyClient_GetCurrentBlockHeight(t *testing.T) {
	//rpc := "http://106.75.226.11:40436"
	//configpath := "/Users/dylen/software/onRobot/build/target/config.json"
	//config.Init(configpath)
	//cli, err := NewPolyClient(rpc, nil)
	//assert.NoError(t, err)
	//
	//height, err := cli.GetCurrentBlockHeight()
	//assert.NoError(t, err)
	//
	//t.Logf("height %d", height)
}

func TestAssetTx(t *testing.T) {
	//headHex := "0x7b22706172656e7448617368223a22307861656364356331663130313132623662343539393033333236633034643266376166366436386535663665376337306438393062383365343339356137626161222c2273686133556e636c6573223a22307831646363346465386465633735643761616238356235363762366363643431616433313234353162393438613734313366306131343266643430643439333437222c226d696e6572223a22307830303030303030303030303030303030303030303030303030303030303030303030303030303030222c227374617465526f6f74223a22307865636465333237386664366262323061336165313935353965653539326631393335366334376331303065323061393138393364616464653161336132633731222c227472616e73616374696f6e73526f6f74223a22307832396634643530333562376433613739613833333834303634356264663632303333383761376339366537623133633434396533333063353538336532356666222c227265636569707473526f6f74223a22307862363434303864613662386665333961623736346166383865636531653863636131633335666439383864623537383036653939313338633632393336356130222c226c6f6773426c6f6f6d223ac22646966666963756c7479223a22307831222c226e756d626572223a223078376235222c226761734c696d6974223a2230783861356439316666222c2267617355736564223a22307830222c2274696d657374616d70223a2230783631316239616132222c22657874726144617461223ac226d697848617368223a22307836333734363936333631366332303632373937613631366537343639366536353230363636313735366337343230373436663663363537323631366536333635222c226e6f6e6365223a22307830303030303030303030303030303030222c2268617368223a22307837303433343662656534626438663139623539306163393162623063323832656139356633386362646532646366396136356537326130633162613832363739227d"
	//headerEnc, err  := hexutil.Decode(headHex)
	//if err != nil {
	//	t.Fatal(err)
	//}
	//
	rpc := "http://seed1.poly.network:20336"
	cli, err := NewPolyClient(rpc, nil)

	var hasValidatorsBlockNumber uint32 = 0
	gB, err := cli.GetBlockByHeight(hasValidatorsBlockNumber)
	if err != nil {
		t.Fatal(err)
		return
	}

	headerEnc := gB.Header.ToArray()
	headerHex := hexutil.Encode(headerEnc)
	t.Logf("header hex is %s", headerHex)

	bookeepers, err := GetBookeeper(gB)
	if err != nil {
		t.Fatal(err)
	}
	bookeepersEnc := AssembleNoCompressBookeeper(bookeepers)
	bookeepersHex := hexutil.Encode(bookeepersEnc)
	t.Logf("bookeepers hex %s", bookeepersHex)
}